/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.85
 * Generated at: 2024-06-27 04:08:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Đăng ký</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("  .password-container .toggle-password {\r\n");
      out.write("            .password-container .toggle-password {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 10px;\r\n");
      out.write("            top: 50%;\r\n");
      out.write("            transform: translateY(-50%);\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("  .password-wrapper {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        position: relative;\r\n");
      out.write("       \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .password-wrapper input[type=\"password\"],\r\n");
      out.write("    .password-wrapper input[type=\"text\"] {\r\n");
      out.write("        padding-right: 30px; /* Đảm bảo chỗ trống cho biểu tượng */\r\n");
      out.write("    }\r\n");
      out.write("	.toggle-password2,\r\n");
      out.write("    .toggle-password {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        right: 10px; /* Đặt biểu tượng bên phải */\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    .thongbao{\r\n");
      out.write("    color: red !important;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
 String error = request.getParameter("error"); 
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"header-left\">\r\n");
      out.write("            <img src=\"logo.jpg\" alt=\"Logo\" class=\"logo\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header-center\">\r\n");
      out.write("            <nav>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"home.html\">Trang chủ</a></li>\r\n");
      out.write("                    <li><a href=\"product.html\">Sản phẩm</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Thương hiệu</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("            <div class=\"search-bar\">\r\n");
      out.write("                <input type=\"text\" class=\"search-input\" placeholder=\"Tìm kiếm...\">\r\n");
      out.write("\r\n");
      out.write("                <button><i class=\"fa-solid fa-magnifying-glass\"></i></button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header-right\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"cart\">\r\n");
      out.write("                <a href=\"#\"><i class=\"fa-solid fa-cart-shopping\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"account\">\r\n");
      out.write("                <a href=\"#\" title=\"Tài khoản\"><i class=\"fa-solid fa-user\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
 String fullname = request.getParameter("fullname") != null ? request.getParameter("fullname") : ""; 
      out.write("           	   \r\n");
 String username = request.getParameter("username") != null ? request.getParameter("username") : ""; 
      out.write("           	   \r\n");
 String password = request.getParameter("password") != null ? request.getParameter("password") : ""; 
      out.write('\r');
      out.write('\n');
 String confirmPassword = request.getParameter("confirmPassword") != null ? request.getParameter("confirmPassword") : ""; 
      out.write("\r\n");
      out.write("    <div class=\"sub-header\">\r\n");
      out.write("        <div class=\"breadcrumb\">\r\n");
      out.write("            <a href=\"#\">Trang chủ</a> / <span>Đăng ký</span>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"register-container\">\r\n");
      out.write("        <div class=\"form-container\">\r\n");
      out.write("            <form class=\"registration-form\" action=\"CreateAccountServlet\" method=\"post\">\r\n");
      out.write("                <h2>ĐĂNG KÝ</h2>\r\n");
      out.write("                \r\n");
      out.write("                ");
if("1".equals(error)){ 
      out.write("\r\n");
      out.write("               <div class=\"p-register\"><p style=\"color: red;\">Đăng ký thất bại, lỗi ở server!</p></div>\r\n");
      out.write("                 ");
} else if("0".equals(error)) { 
      out.write("\r\n");
      out.write("                <div class=\"p-register\"><p style=\"color: red;\">Đăng ký thất bại, lỗi ở server!</p></div>\r\n");
      out.write("                ");
} else { 
      out.write("\r\n");
      out.write("                 <div class=\"p-register\"><p>Nhập thông tin cá nhân để tạo tài khoản</p></div>\r\n");
      out.write("                ");
}
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                <label for=\"name\">Họ và tên</label>\r\n");
      out.write("                <input type=\"text\" id=\"name\" name=\"fullname\" value=\"");
      out.print(fullname);
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("                <label for=\"email\">Email</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"username\"  value=\"");
      out.print(username );
      out.write("\" required>\r\n");
      out.write("                ");
if("2".equals(error)) { 
      out.write("\r\n");
      out.write("                <p class=\"thongbao\">Email không hợp lệ!</p>");
} 
      out.write("\r\n");
      out.write("                ");
if("6".equals(error)) { 
      out.write("\r\n");
      out.write("              <p class=\"thongbao\" >Email đã tồn tại!</p>");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <label for=\"password\">Mật khẩu</label>\r\n");
      out.write("                <div class=\"password-wrapper\">\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\"  value=\"");
      out.print(password);
      out.write("\" required>\r\n");
      out.write("                <span class=\"toggle-password\" onclick=\"togglePasswordVisibility()\">👁️</span>\r\n");
      out.write("                 \r\n");
      out.write("                </div>\r\n");
      out.write("                ");
if("4".equals(error)) { 
      out.write("\r\n");
      out.write("               <p class=\"thongbao\">Mật khẩu từ 8 kí tự, ít nhất 1 chữ hoa và 1 số!</p>");
} 
      out.write("\r\n");
      out.write("               \r\n");
      out.write("                \r\n");
      out.write("                <label for=\"password\">Xác nhận mật khẩu</label>\r\n");
      out.write("                <div class=\"password-wrapper\">\r\n");
      out.write("                <input type=\"password\" id=\"password2\" name=\"confirmPassword\" value=\"");
      out.print(confirmPassword );
      out.write("\" required>\r\n");
      out.write("                      <span class=\"toggle-password2\" onclick=\"togglePasswordVisibility2()\">👁️</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
if("5".equals(error)) { 
      out.write("\r\n");
      out.write("                <p class=\"thongbao\">Xác nhận mật khẩu sai!</p>");
} 
      out.write("\r\n");
      out.write("                <br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <button type=\"submit\">ĐĂNG KÝ</button>\r\n");
      out.write("                <p class=\"login\">Bạn đã có tài khoản? <a href=\"login.jsp\">Đăng nhập</a></p>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        function togglePasswordVisibility() {\r\n");
      out.write("            const passwordInput = document.getElementById('password');\r\n");
      out.write("            const togglePassword = document.querySelector('.toggle-password');\r\n");
      out.write("            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n");
      out.write("            passwordInput.setAttribute('type', type);\r\n");
      out.write("            togglePassword.textContent = type === 'password' ? '👁️' : '🙈';\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("     <script>\r\n");
      out.write("        function togglePasswordVisibility2() {\r\n");
      out.write("            const passwordInput = document.getElementById('password2');\r\n");
      out.write("            const togglePassword = document.querySelector('.toggle-password2');\r\n");
      out.write("            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n");
      out.write("            passwordInput.setAttribute('type', type);\r\n");
      out.write("            togglePassword.textContent = type === 'password' ? '👁️' : '🙈';\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
