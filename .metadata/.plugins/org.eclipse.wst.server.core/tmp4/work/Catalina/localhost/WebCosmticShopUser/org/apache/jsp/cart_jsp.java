/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.85
 * Generated at: 2024-06-26 15:42:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.dto.CartDTO;
import java.util.ArrayList;
import common.StringCommon;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.dto.CartDTO");
    _jspx_imports_classes.add("common.StringCommon");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Giỏ hàng</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("    \r\n");
      out.write("    .body-cart{\r\n");
      out.write("    	width: 85%;\r\n");
      out.write("        flex-direction: row;\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        flex-wrap: wrap;\r\n");
      out.write("        width: 85%;\r\n");
      out.write("        max-width: 1200px;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("       /*  margin-top: 50px; */\r\n");
      out.write("        align-items: center; \r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("        .cart-container {\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            align-content: center;\r\n");
      out.write("/*         	border: black solid 1px;  */\r\n");
      out.write("        	display: flex;\r\n");
      out.write("       		flex-direction: row;\r\n");
      out.write("        	gap: 15px;\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("        .cart-product-list {\r\n");
      out.write("            flex: 1 1 65%;\r\n");
      out.write("      		padding: 0 10px 10px 10px; \r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cart-bill {\r\n");
      out.write("            flex: 1 1 32%;\r\n");
      out.write("            padding: 0px 10px 10px 30px; \r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            border-left: #ccc solid 1px;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .bill-table,\r\n");
      out.write("        .product-table {\r\n");
      out.write("            /* border-collapse: collapse; */\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: separate;\r\n");
      out.write("            text-indent: initial;\r\n");
      out.write("            border-spacing: 0px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        .product-table th,\r\n");
      out.write("        .product-table td {\r\n");
      out.write("\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .product-table th {\r\n");
      out.write("       		 padding: 10px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            font-family: Proxima, sans-serif !important;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .bill-table th {\r\n");
      out.write("\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("            font-weight: normal;\r\n");
      out.write("            font-family: Proxima, sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .bill-table td {\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: right;\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("            color: #111;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            white-space: nowrap;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .bill-table-1 {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: separate;\r\n");
      out.write("            text-indent: initial;\r\n");
      out.write("            border-spacing: 0px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .bill-table-1 th {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 2px solid #ddd;\r\n");
      out.write("            font-weight: bolder;\r\n");
      out.write("            font-family: Proxima, sans-serif;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        .td-total {\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        .checkout-button {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("            padding: 10px 10px;\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button:hover,\r\n");
      out.write("        .checkout-button:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button:active,\r\n");
      out.write("        .checkout-button:active {\r\n");
      out.write("            background-color: #004085;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button {\r\n");
      out.write("            display: inline-flex;\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("            padding: 10px 10px;\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-area {\r\n");
      out.write("            margin: 40px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("\r\n");
      out.write("            .cart-product-list,\r\n");
      out.write("            .cart-bill {\r\n");
      out.write("                flex: 1 1 100%;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .product-name-td {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .product-name-td img {\r\n");
      out.write("            width: 60px;\r\n");
      out.write("            height: 60px;\r\n");
      out.write("            margin-right: 7px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .product-name-td p {\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            margin: 10px 0 10px  0;\r\n");
      out.write("            max-width: 380px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .fa-trash-can{\r\n");
      out.write("        color: red;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .fa-trash-can:hover{\r\n");
      out.write("        color: orange;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    .counter {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        width: 90px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .counter a {\r\n");
      out.write("        background-color: #fff;	\r\n");
      out.write("        width: 30px;\r\n");
      out.write("        padding: 4px 7px 4px 7px;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        outline: none;\r\n");
      out.write("        user-select: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .counter a:hover {\r\n");
      out.write("        background-color: #eee;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .counter .decrease{\r\n");
      out.write("    border-right: 1px solid #ccc; \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .counter .increase{\r\n");
      out.write("    border-left: 1px solid #ccc; \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .counter input {\r\n");
      out.write("        width: 30px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        font-size: 15px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        -moz-appearance: textfield;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    .empty-cart{\r\n");
      out.write("    height: 300px;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    border: #ccc solid 1px;\r\n");
      out.write("    margin-bottom: 40px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("     .empty-cart .back-btn{\r\n");
      out.write("    margin-top: 50px !important;\r\n");
      out.write("    padding: 10px 10px;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    background-color: #111;\r\n");
      out.write("    border: none;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    border-radius: 3px;\r\n");
      out.write("    transition: background-color 0.3s;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    input.quantityProduct::-webkit-outer-spin-button,\r\n");
      out.write("	input.quantityProduct::-webkit-inner-spin-button {\r\n");
      out.write("    -webkit-appearance: none;\r\n");
      out.write("    margin: 0;}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"header-left\">\r\n");
      out.write("            <img src=\"logo.jpg\" alt=\"Logo\" class=\"logo\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header-center\">\r\n");
      out.write("            <nav>\r\n");
      out.write("                <ul>\r\n");
      out.write("                     <li><a href=\"ShowHomeServlet\">Trang chủ</a></li>\r\n");
      out.write("                    <li><a href=\"ShowProductListServlet\">Sản phẩm</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Thương hiệu</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("            <div class=\"search-bar\">\r\n");
      out.write("                <input type=\"text\" class=\"search-input\" placeholder=\"Tìm kiếm...\">\r\n");
      out.write("\r\n");
      out.write("                <button><i class=\"fa-solid fa-magnifying-glass\"></i></button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header-right\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"cart\">\r\n");
      out.write("                <a href=\"ShowCartServlet\"><i class=\"fa-solid fa-cart-shopping\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"account\">\r\n");
      out.write("                <a href=\"#\" title=\"Tài khoản\"><i class=\"fa-solid fa-user\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"sub-header\">\r\n");
      out.write("        <div class=\"breadcrumb\">\r\n");
      out.write("            <a href=\"#\">Trang chủ</a> / <span>Giỏ hàng</span>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"body-cart\">\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("		<div class=\"progress-bar\">\r\n");
      out.write("            <div class=\"step active\">\r\n");
      out.write("                <div class=\"icon\"><i class=\"fa-solid fa-cart-shopping\"></i></div>\r\n");
      out.write("                <div class=\"text\">Giỏ hàng</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"line\"></div>\r\n");
      out.write("            <div class=\"step\">\r\n");
      out.write("                <div class=\"icon\"><i class=\"fa-regular fa-credit-card\"></i></i></div>\r\n");
      out.write("                <div class=\"text\">Thanh toán</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"line\"></div>\r\n");
      out.write("            <div class=\"step\">\r\n");
      out.write("                <div class=\"icon\"><i class=\"fa-regular fa-circle-check\"></i></div>\r\n");
      out.write("                <div class=\"text\">Hoàn thành</div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("	        \r\n");
      out.write("	    <form class=\"cart-container\" action=\"ShowCheckoutServlet\" method=\"post\">\r\n");
      out.write("	\r\n");
      out.write("	        <div class=\"cart-product-list\">\r\n");
      out.write("	       \r\n");
      out.write("	\r\n");
      out.write("	   ");
      out.write("\r\n");
      out.write("	   \r\n");
      out.write("\r\n");
      out.write("	 ");
ArrayList<CartDTO> cartList = (ArrayList<CartDTO>)request.getAttribute("cartList");
      out.write(" 	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("    ");
if (cartList != null && !cartList.isEmpty()) {
        
      out.write("\r\n");
      out.write("    \r\n");
      out.write("	             <table class=\"product-table\">\r\n");
      out.write("	        <thead>\r\n");
      out.write("	            <tr>\r\n");
      out.write("	                <th>Sản phẩm</th>\r\n");
      out.write("	                <th>Giá</th>\r\n");
      out.write("	                <th>Số lượng</th>\r\n");
      out.write("	                <th>Tạm tính</th>\r\n");
      out.write("	                <th></th>\r\n");
      out.write("	            </tr>\r\n");
      out.write("	        </thead>\r\n");
      out.write("	        <tbody>\r\n");
      out.write("	            ");
 for (CartDTO c : cartList) { 
      out.write("\r\n");
      out.write("	                <tr>\r\n");
      out.write("	                    <td>\r\n");
      out.write("	                        <div class=\"product-name-td\">\r\n");
      out.write("	                            <img src=\"");
      out.print(c.getImage() );
      out.write("\" alt=\"Product Image\">\r\n");
      out.write("	                            <div>\r\n");
      out.write("	                                <p>");
      out.print(c.getProductGroupName() );
      out.write(' ');
      out.print(c.getSize() );
      out.write("</p>\r\n");
      out.write("	                            </div>\r\n");
      out.write("	                        </div>\r\n");
      out.write("	                    </td>\r\n");
      out.write("	                    <td class=\"price\">");
      out.print(StringCommon.convertDoubleToStringWithComma(c.getPrice() ));
      out.write("</td>\r\n");
      out.write("	                    <td>\r\n");
      out.write("	                    \r\n");
      out.write("	                    \r\n");
      out.write("	                    \r\n");
      out.write("	                        <div class=\"counter\" data-product-id=\"");
      out.print( c.getProductID() );
      out.write("\" data-quantity=\"");
      out.print( c.getQuantity() );
      out.write("\" >\r\n");
      out.write("							    <a class=\"decrease\">-</a>\r\n");
      out.write("							    <input type=\"number\" min=\"1\" class=\"quantityProduct\" value=\"");
      out.print( c.getQuantity() );
      out.write("\" name=\"quantity\">\r\n");
      out.write("							    <input type=\"hidden\" name=\"proID\" value=\"");
      out.print(c.getProductID());
      out.write("\">\r\n");
      out.write("							    <a class=\"increase\">+</a>\r\n");
      out.write("							</div>\r\n");
      out.write("	                    </td>\r\n");
      out.write("	                    <td class=\"subtotal\">");
      out.print(StringCommon.convertDoubleToStringWithComma(c.getQuantity() * c.getPrice()) );
      out.write("</td>\r\n");
      out.write("	                    <td><a href=\"DeleteCartServlet?productID=");
      out.print(c.getProductID());
      out.write("\"><i class=\"fa-regular fa-trash-can\"></i></a></td>\r\n");
      out.write("	                </tr>\r\n");
      out.write("	            ");
 } 
      out.write("\r\n");
      out.write("	            <!-- Thêm các dòng sản phẩm khác ở đây -->\r\n");
      out.write("	        </tbody>\r\n");
      out.write("	    </table>\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	            \r\n");
      out.write("	\r\n");
      out.write("	        </div>\r\n");
      out.write("	        <div class=\"cart-bill\">\r\n");
      out.write("	            <table class=\"bill-table-1\">\r\n");
      out.write("	                <thead>\r\n");
      out.write("	                    <tr>\r\n");
      out.write("	                        <th>Cộng giỏ hàng</th>\r\n");
      out.write("	                    </tr>\r\n");
      out.write("	                </thead>\r\n");
      out.write("	\r\n");
      out.write("	            </table>\r\n");
      out.write("	            <table class=\"bill-table\">\r\n");
      out.write("			        <tbody>\r\n");
      out.write("			            <tr>\r\n");
      out.write("			                <th>Tổng tiền hàng</th>\r\n");
      out.write("			                <td><bdi id=\"subtotalAmount\"></bdi></td>\r\n");
      out.write("			            </tr>\r\n");
      out.write("			            <tr>\r\n");
      out.write("			                <th>Vận chuyển</th>\r\n");
      out.write("			                <td><bdi id=\"shippingCost\">Giao hàng miễn phí</bdi></td>\r\n");
      out.write("			            </tr>\r\n");
      out.write("			            <tr>\r\n");
      out.write("			                <th>\r\n");
      out.write("			                    <p class=\"td-total\">Tổng thanh toán</p>\r\n");
      out.write("			                </th>\r\n");
      out.write("			                <td><bdi id=\"totalAmount\"></bdi></td>\r\n");
      out.write("			            </tr>\r\n");
      out.write("			        </tbody>\r\n");
      out.write("			    </table>\r\n");
      out.write("	            <div class=\"btn-area\">\r\n");
      out.write("	                <button id=\"checkoutButton\" class=\"checkout-button\">\r\n");
      out.write("					    Tiến hành thanh toán\r\n");
      out.write("					</button>\r\n");
      out.write("	            </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </form>\r\n");
      out.write("	     </div>\r\n");
      out.write("	    ");
 } else {
      out.write("\r\n");
      out.write("	        <div class=\"empty-cart\">\r\n");
      out.write("	        <h3>Chưa có sản phẩm nào trong giỏ hàng</h3>\r\n");
      out.write("	        <a class=\"back-btn\" href=\"ShowProductListServlet\">Tiếp tục mua sắm</a> \r\n");
      out.write("	        </div>\r\n");
      out.write("	   ");
 } 
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <footer>\r\n");
      out.write("        <div class=\"footer-container\">\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Về chúng tôi</h3>\r\n");
      out.write("                <p>COSMETIC SHOP chuyên cung cấp các sản phẩm chăm sóc da uy tín và chất lượng.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Liên hệ</h3>\r\n");
      out.write("                <p>Email: 123@example.com</p>\r\n");
      out.write("                <p>Điện thoại: 0123-456-789</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Kết nối với chúng tôi</h3>\r\n");
      out.write("                <p>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fa-brands fa-facebook\"></i></a>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fa-brands fa-twitter\"></i></a>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fa-brands fa-instagram\"></i></a>\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write(" <script>\r\n");
      out.write(" /* document.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("	    const counters = document.querySelectorAll('.counter');\r\n");
      out.write("\r\n");
      out.write("	    counters.forEach(counter => {\r\n");
      out.write("	        const quantityInput = counter.querySelector('.quantityProduct');\r\n");
      out.write("	        const decreaseButton = counter.querySelector('.decrease');\r\n");
      out.write("	        const increaseButton = counter.querySelector('.increase');\r\n");
      out.write("	        const priceElement = counter.closest('tr').querySelector('.price');\r\n");
      out.write("	        const subtotalElement = counter.closest('tr').querySelector('.subtotal');\r\n");
      out.write("\r\n");
      out.write("	        const updateSubtotal = () => {\r\n");
      out.write("	            const price = parseFloat(priceElement.textContent.replace(/,/g, ''));\r\n");
      out.write("	            const quantity = parseInt(quantityInput.value);\r\n");
      out.write("	            const subtotal = price * quantity;\r\n");
      out.write("	            subtotalElement.textContent = subtotal.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n");
      out.write("	        };\r\n");
      out.write("\r\n");
      out.write("	        decreaseButton.addEventListener('click', () => {\r\n");
      out.write("	            let currentValue = parseInt(quantityInput.value);\r\n");
      out.write("	            if (currentValue > 0) {\r\n");
      out.write("	                quantityInput.value = currentValue - 1;\r\n");
      out.write("	                updateSubtotal();\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("	        increaseButton.addEventListener('click', () => {\r\n");
      out.write("	            let currentValue = parseInt(quantityInput.value);\r\n");
      out.write("	            quantityInput.value = currentValue + 1;\r\n");
      out.write("	            updateSubtotal();\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("	        updateSubtotal();\r\n");
      out.write("	    });\r\n");
      out.write("	}); */\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("/* 	document.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("	    const counters = document.querySelectorAll('.counter');\r\n");
      out.write("	    const subtotalElement = document.getElementById('subtotalAmount');\r\n");
      out.write("	    const shippingCostElement = document.getElementById('shippingCost');\r\n");
      out.write("	    const totalElement = document.getElementById('totalAmount');\r\n");
      out.write("\r\n");
      out.write("	    const shippingCost = 0; // Tiền giao hàng (có thể thay đổi nếu cần)\r\n");
      out.write("\r\n");
      out.write("	    const updateSubtotal = () => {\r\n");
      out.write("	        let totalSubtotal = 0;\r\n");
      out.write("	        document.querySelectorAll('.product-table tbody tr').forEach(row => {\r\n");
      out.write("	            const priceElement = row.querySelector('.price');\r\n");
      out.write("	            const quantityInput = row.querySelector('.quantityProduct');\r\n");
      out.write("	            const subtotalElement = row.querySelector('.subtotal');\r\n");
      out.write("	            \r\n");
      out.write("\r\n");
      out.write("	            const price = parseFloat(priceElement.textContent.replace(/,/g, ''));\r\n");
      out.write("	            const quantity = parseInt(quantityInput.value);\r\n");
      out.write("	            const subtotal = price * quantity;\r\n");
      out.write("\r\n");
      out.write("	            subtotalElement.textContent = subtotal.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n");
      out.write("	            totalSubtotal += subtotal;\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("	        subtotalElement.textContent = totalSubtotal.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n");
      out.write("	        const total = totalSubtotal + shippingCost;\r\n");
      out.write("	        totalElement.textContent = total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n");
      out.write("	    };\r\n");
      out.write("\r\n");
      out.write("	    counters.forEach(counter => {\r\n");
      out.write("	        const quantityInput = counter.querySelector('.quantityProduct');\r\n");
      out.write("	        const decreaseButton = counter.querySelector('.decrease');\r\n");
      out.write("	        const increaseButton = counter.querySelector('.increase');\r\n");
      out.write("\r\n");
      out.write("	        decreaseButton.addEventListener('click', () => {\r\n");
      out.write("	            let currentValue = parseInt(quantityInput.value);\r\n");
      out.write("	            if (currentValue > 0) {\r\n");
      out.write("	                quantityInput.value = currentValue - 1;\r\n");
      out.write("	                updateSubtotal();\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("	        increaseButton.addEventListener('click', () => {\r\n");
      out.write("	            let currentValue = parseInt(quantityInput.value);\r\n");
      out.write("	            quantityInput.value = currentValue + 1;\r\n");
      out.write("	            updateSubtotal();\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    updateSubtotal(); // Cập nhật tạm tính và tổng ban đầu\r\n");
      out.write("	}); */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("	    const counters = document.querySelectorAll('.counter');\r\n");
      out.write("	    const subtotalElement = document.getElementById('subtotalAmount');\r\n");
      out.write("	    const totalElement = document.getElementById('totalAmount');\r\n");
      out.write("\r\n");
      out.write("	    const shippingCost = 0; // Tiền giao hàng (có thể thay đổi nếu cần)\r\n");
      out.write("\r\n");
      out.write("	    const updateSubtotal = () => {\r\n");
      out.write("	        let totalSubtotal = 0;\r\n");
      out.write("	        document.querySelectorAll('.product-table tbody tr').forEach(row => {\r\n");
      out.write("	            const priceElement = row.querySelector('.price');\r\n");
      out.write("	            const quantityInput = row.querySelector('.quantityProduct');\r\n");
      out.write("	            const subtotalElement = row.querySelector('.subtotal');\r\n");
      out.write("\r\n");
      out.write("	            const price = parseFloat(priceElement.textContent.replace(/,/g, ''));\r\n");
      out.write("	            const quantity = parseInt(quantityInput.value);\r\n");
      out.write("	            const subtotal = price * quantity;\r\n");
      out.write("\r\n");
      out.write("	            subtotalElement.textContent = subtotal.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n");
      out.write("	            totalSubtotal += subtotal;\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("	        subtotalElement.textContent = totalSubtotal.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n");
      out.write("	        const total = totalSubtotal + shippingCost;\r\n");
      out.write("	        totalElement.textContent = total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n");
      out.write("	    };\r\n");
      out.write("\r\n");
      out.write("	    const updateCart = (productID, quantityChange) => {\r\n");
      out.write("	    	console.log('productID:', productID);\r\n");
      out.write("	    	console.log('quantityChange:', quantityChange);\r\n");
      out.write("	    	\r\n");
      out.write("	    	const xhr = new XMLHttpRequest();\r\n");
      out.write("	        xhr.open('POST', 'AddToCart', true);\r\n");
      out.write("	        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n");
      out.write("	        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n");
      out.write("	        \r\n");
      out.write("	        xhr.onload = () => {\r\n");
      out.write("	            if (xhr.status === 200) {\r\n");
      out.write("	                console.log(xhr.responseText);\r\n");
      out.write("	                if (xhr.responseText === 'success') {\r\n");
      out.write("	                    console.log('Cart updated successfully.');\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    console.error('Failed to update cart.');\r\n");
      out.write("	                }\r\n");
      out.write("	            }\r\n");
      out.write("	        };\r\n");
      out.write("	       /*  xhr.send(`proID=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${productID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&Quantity=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${quantityChange}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`); */\r\n");
      out.write("	        xhr.send(\"proID=\" + encodeURIComponent(productID) + \"&Quantity=\" + encodeURIComponent(quantityChange));\r\n");
      out.write("	    };\r\n");
      out.write("\r\n");
      out.write("	    counters.forEach(counter => {\r\n");
      out.write("	        const quantityInput = counter.querySelector('.quantityProduct');\r\n");
      out.write("	        const decreaseButton = counter.querySelector('.decrease');\r\n");
      out.write("	        const increaseButton = counter.querySelector('.increase');\r\n");
      out.write("\r\n");
      out.write("	        decreaseButton.addEventListener('click', () => {\r\n");
      out.write("	            const productID = counter.getAttribute('data-product-id');\r\n");
      out.write("	            console.log('productID:', productID); // Kiểm tra productID\r\n");
      out.write("	            let currentValue = parseInt(quantityInput.value);\r\n");
      out.write("	            if (currentValue > 1) {\r\n");
      out.write("	                quantityInput.value = currentValue - 1;\r\n");
      out.write("	                updateSubtotal();\r\n");
      out.write("	                updateCart(productID, -1);\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("	        increaseButton.addEventListener('click', () => {\r\n");
      out.write("	            const productID = counter.getAttribute('data-product-id');\r\n");
      out.write("	            console.log('productID:', productID); // Kiểm tra productID\r\n");
      out.write("	            let currentValue = parseInt(quantityInput.value);\r\n");
      out.write("	            quantityInput.value = currentValue + 1;\r\n");
      out.write("	            updateSubtotal();\r\n");
      out.write("	            updateCart(productID, 1);\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    updateSubtotal(); // Cập nhật tạm tính và tổng ban đầu\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- <script>\r\n");
      out.write("    document.getElementById('checkoutButton').addEventListener('click', function() {\r\n");
      out.write("        var form = document.getElementById('checkoutForm');\r\n");
      out.write("        form.submit();\r\n");
      out.write("    });\r\n");
      out.write("	</script> -->\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
