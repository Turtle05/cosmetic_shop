/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.85
 * Generated at: 2024-06-26 16:26:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.bean.CategoryGroup;
import model.dto.ProductDTO;
import java.util.ArrayList;
import common.StringCommon;

public final class product_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.bean.CategoryGroup");
    _jspx_imports_classes.add("common.StringCommon");
    _jspx_imports_classes.add("model.dto.ProductDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Sản phẩm</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("    \r\n");
      out.write("    .pagination {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    padding: 10px 0;\r\n");
      out.write("    white-space: nowrap;\r\n");
      out.write("    margin-bottom: 15px;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.pagination a {\r\n");
      out.write("	    color: black;\r\n");
      out.write("	    padding: 8px 16px;\r\n");
      out.write("	    text-decoration: none;\r\n");
      out.write("	    transition: background-color 0.3s;\r\n");
      out.write("	    margin: 0 4px;\r\n");
      out.write("	    border: 1px solid #ddd;\r\n");
      out.write("	    border-radius: 4px;\r\n");
      out.write("	    display: inline-block; /* Ensure inline-block display to stay in a line */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.pagination a:hover {\r\n");
      out.write("	    background-color: #ddd;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.pagination a.active {\r\n");
      out.write("	    background-color: #4CAF50;\r\n");
      out.write("	    color: white;\r\n");
      out.write("	    border: 1px solid #4CAF50;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.pagination a:first-child,\r\n");
      out.write("	.pagination a:last-child {\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.pagination a.disabled {\r\n");
      out.write("	    color: #ccc;\r\n");
      out.write("	    pointer-events: none;\r\n");
      out.write("	    cursor: not-allowed;\r\n");
      out.write("	}\r\n");
      out.write("	    \r\n");
      out.write("    \r\n");
      out.write("    .product-container{\r\n");
      out.write("   	 margin: 0 auto;\r\n");
      out.write("     display: grid;\r\n");
      out.write("     grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\r\n");
      out.write("     gap: 25px;\r\n");
      out.write("     box-sizing: border-box;\r\n");
      out.write("     width: 100%;\r\n");
      out.write("     background-color: white;\r\n");
      out.write("     box-shadow: none;\r\n");
      out.write("     padding: 40px 30px 30px 30px;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .main-body{\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("     display: ;\r\n");
      out.write("     flex-direction: column;\r\n");
      out.write("     align-items: center;\r\n");
      out.write("     text-align: center;\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("        .category {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .subcategory {\r\n");
      out.write("            display: none;\r\n");
      out.write("            margin-left: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("        .brand-list {\r\n");
      out.write("            max-height: 200px;\r\n");
      out.write("            overflow-y: auto;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .category-header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .category-name {\r\n");
      out.write("            margin-right: auto;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .category-name a {\r\n");
      out.write("            margin-right: 5px;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .category-name-sub a {\r\n");
      out.write("\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .category-name a:hover,\r\n");
      out.write("        .category-name-sub a:hover {\r\n");
      out.write("            color: blue;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("      .expand::after {\r\n");
      out.write("            content: '+';\r\n");
      out.write("        }\r\n");
      out.write("        .collapse::after {\r\n");
      out.write("            content: '-';\r\n");
      out.write("        }\r\n");
      out.write("        .subcategory {\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("        .category-name-sub {\r\n");
      out.write("            padding-left: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("     \r\n");
      out.write("        \r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");

    ArrayList<ProductDTO> productList = (ArrayList<ProductDTO>) request.getAttribute("productList");
    if (productList != null) {
        for (ProductDTO product : productList) {
            // Code to display product information
        }
    } else {
        out.println("Không có sản phẩm!");
    }

      out.write("\r\n");
      out.write("\r\n");

    ArrayList<CategoryGroup> catGroupList = (ArrayList<CategoryGroup>) request.getAttribute("catGroupList");
if (catGroupList != null) {
    for (CategoryGroup pg : catGroupList) {
        // Code to display product information
    }
} else {
    out.println("Không có sản phẩm!");
}

      out.write("\r\n");
      out.write("\r\n");

	String searchText = session.getAttribute("searchProductText") != null
			? (String) session.getAttribute("searchProductText"): "";
	 String functionPrefix = "".equals(searchText) ? "ShowProductListServlet" : "SearchProductServlet"; 
	
      out.write("\r\n");
      out.write("\r\n");

	int currentPageNumer = (Integer) request.getAttribute("currentPageNumer"); // Do server trả về

	int totalPageNumber = (Integer) request.getAttribute("totalPageNumber"); // Do server trả về

	int[] pageNumberList = new int[10]; // Do client tự tính toán

	int pageQuantity = 0; // Do client tự tính toán

	// Tình huống số 1:
	//tổng số trang nhỏ hơn hoặc bằng 10

	if (totalPageNumber <= 10) {

		for (int j = 0; j < totalPageNumber; j++) {

			pageNumberList[j] = j + 1;

			pageQuantity++;

		}

	}

	// Tình huống số 2 nằm trong tình huống số 4 rồi

	// Tình huống số 3:
	// Nếu tổng số trang lớn hơn 10, và currentPageNumer <= 4, thì ta luôn luôn in ra là 1 2 3 4 5 6 7 8 9 10.

	// Tình huống số 3:

	if (totalPageNumber > 10 && currentPageNumer <= 4) {

		for (int j = 0; j < 10; j++) {

			pageNumberList[j] = j + 1;

			pageQuantity++;

		}

	}

	// Tình huống số 4
	if (totalPageNumber > 10 && currentPageNumer >= (totalPageNumber - 5)) {

		for (int j = 10; j >= 1; j--) {

			pageNumberList[j - 1] = totalPageNumber - (10 - j);

			pageQuantity++;

		}

	}

	// Tình huống số 5:

	if (totalPageNumber > 10 && currentPageNumer >= 5 && currentPageNumer <= (totalPageNumber - 5)) {

		for (int j = 0; j < 10; j++) {

			pageNumberList[j] = currentPageNumer - 3 + j;

			pageQuantity++;

		}

	}
	
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"header-left\">\r\n");
      out.write("            <img src=\"logo.jpg\" alt=\"Logo\" class=\"logo\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header-center\">\r\n");
      out.write("            <nav>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"ShowHomeServlet\">Trang chủ</a></li>\r\n");
      out.write("                    <li><a href=\"ShowProductListServlet\">Sản phẩm</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Thương hiệu</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("            <div class=\"search-bar\">\r\n");
      out.write("                <input type=\"text\" class=\"search-input\" placeholder=\"Tìm kiếm...\">\r\n");
      out.write("\r\n");
      out.write("                <button><i class=\"fa-solid fa-magnifying-glass\"></i></button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header-right\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"cart\">\r\n");
      out.write("                <a href=\"ShowCartServlet\"><i class=\"fa-solid fa-cart-shopping\"></i></a>\r\n");
      out.write("             <!--    <p>Giỏ hàng</p> -->\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("   			");
 if (session.getAttribute("accountInfor") == null) {
      out.write("		\r\n");
      out.write("	           <div class=\"profile-dropdown account\">\r\n");
      out.write("	                <a href=\"login.jsp\" title=\"Đăng nhập\"><i class=\"fa-solid fa-user\"></i></a>\r\n");
      out.write("	           			<!--      <p>Tài khoản</p> -->\r\n");
      out.write("           	   </div>\r\n");
      out.write("	           ");
} else { 
      out.write("\r\n");
      out.write("           \r\n");
      out.write("               <div class=\"profile-dropdown account\">\r\n");
      out.write("	                <a href=\"#\" title=\"Tài khoản\"><i class=\"fa-solid fa-user\"></i></a>\r\n");
      out.write("	           			<!--<p>Tài khoản</p> -->\r\n");
      out.write("	                <div class=\"profile-dropdown-content\">\r\n");
      out.write("	                    <a href=\"ShowInforServlet\"><i class=\"fa-regular fa-user\"></i>Thông tin tài khoản</a>\r\n");
      out.write("	                    <a href=\"ShowOrderServlet\"><i class=\"fa-solid fa-list-check\"></i>Quản lý đơn hàng</a>\r\n");
      out.write("	                    <a href=\"LogoutServlet\"><i class=\"fa-solid fa-arrow-right-from-bracket\"></i>Đăng xuất</a>\r\n");
      out.write("	                </div>\r\n");
      out.write("            	</div>\r\n");
      out.write("                ");
} 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"sub-header\">\r\n");
      out.write("        <div class=\"breadcrumb\">\r\n");
      out.write("            <a href=\"#\">Trang chủ</a> / <span>Sản phẩm</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"filter\">\r\n");
      out.write("            <select>\r\n");
      out.write("                <option value=\"newest\">Mới nhất</option>\r\n");
      out.write("                <option value=\"oldest\">Cũ nhất</option>\r\n");
      out.write("                <option value=\"price-asc\">Giá tăng dần</option>\r\n");
      out.write("                <option value=\"price-desc\">Giá giảm dần</option>\r\n");
      out.write("            </select>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"main-container\">\r\n");
      out.write("        <aside class=\"sidebar\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <h2>Danh mục</h2>\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("             ");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("          ");
for(CategoryGroup cg : catGroupList) {
      out.write(" \r\n");
      out.write("            <div class=\"category\">\r\n");
      out.write("        <div class=\"category-name\">\r\n");
      out.write("            <a href=\"ShowProductByCatGroup?catGroupID=");
      out.print(cg.getCategoryGroupID());
      out.write('"');
      out.write('>');
      out.print(cg.getCategoryGroupName());
      out.write("</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"expand\" onclick=\"toggleSubcategory(this, '");
      out.print(cg.getCategoryGroupID());
      out.write("')\"></div>\r\n");
      out.write("        <div class=\"subcategory\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("        ");
 } 
      out.write("    \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("               \r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div>\r\n");
      out.write("                <h2>Thương hiệu</h2>\r\n");
      out.write("                <div class=\"category\">\r\n");
      out.write("                    <div class=\"brand-list\">\r\n");
      out.write("                        <div><input type=\"checkbox\"> CeraVe</div>\r\n");
      out.write("                        <div><input type=\"checkbox\"> Nerman</div>\r\n");
      out.write("                        <div><input type=\"checkbox\"> Cetaphil</div>\r\n");
      out.write("                        <div><input type=\"checkbox\"> Hazeline</div>\r\n");
      out.write("                        <div><input type=\"checkbox\"> Listerine</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </aside>\r\n");
      out.write("		<div class=\"main-body\">\r\n");
      out.write("        <div class=\"product-container\">\r\n");
      out.write("        ");
 String message = request.getParameter("message"); 
      out.write("\r\n");
      out.write("        ");
      out.print(("1".equals(message)) ? "thành công!" : "" );
      out.write("\r\n");
      out.write("          ");
      out.print(("".equals(message)) ? "không thành công!" : "" );
      out.write(" \r\n");
      out.write("        ");
 for (ProductDTO p : productList) { 
      out.write("\r\n");
      out.write("        \r\n");
      out.write("            <div class=\"product-card\">\r\n");
      out.write("            <a href=\"ShowProductDetailServlet?productGroupID=");
      out.print(p.getProductGroupID());
      out.write("&productID=");
      out.print(p.getProductID());
      out.write("\"><img src=\"");
      out.print(p.getImage() );
      out.write("\" alt=\"Product\"></a>\r\n");
      out.write("            <div class=\"product-info\">\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("                <p class=\"price\">");
      out.print(StringCommon.formatCurrency(p.getPrice()));
      out.write(" </p>\r\n");
      out.write("                <p class=\"brand\"><a href=\"#\">");
      out.print(p.getBrandName());
      out.write("</a></p>\r\n");
      out.write("                <p class=\"description\">");
      out.print(p.getProductGroupName());
      out.write("</p>\r\n");
      out.write("                <button type=\"button\" onclick=\"addToCart('");
      out.print(p.getProductGroupID());
      out.write("', '");
      out.print(p.getProductID());
      out.write("');\" class=\"add-to-cart\">Thêm vào giỏ</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("         ");
 } 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("          \r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("		 <div class=\"pagination\" >\r\n");
      out.write("		                ");

			if (currentPageNumer > 1) {
			
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			<a href='");
      out.print(functionPrefix);
      out.write("?page=1'>Đầu</a>\r\n");
      out.write("		\r\n");
      out.write("			<a href='");
      out.print(functionPrefix);
      out.write("?page=");
      out.print(currentPageNumer - 1);
      out.write("'> &laquo;\r\n");
      out.write("			</a>\r\n");
      out.write("		\r\n");
      out.write("			");

			}
			for (int k = 0; k < pageQuantity; k++) {
		
			if (pageNumberList[k] == currentPageNumer) {
			
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			<a href='");
      out.print(functionPrefix);
      out.write("?page=");
      out.print(pageNumberList[k]);
      out.write("'><b>");
      out.print(pageNumberList[k]);
      out.write("</b></a>\r\n");
      out.write("		\r\n");
      out.write("			");

			} else {
			
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			<a href='");
      out.print(functionPrefix);
      out.write("?page=");
      out.print(pageNumberList[k]);
      out.write('\'');
      out.write('>');
      out.print(pageNumberList[k]);
      out.write("</a>\r\n");
      out.write("		\r\n");
      out.write("			");

			}
		
			}
			
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("			");

			if (currentPageNumer < totalPageNumber) {
			
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			<a href='");
      out.print(functionPrefix);
      out.write("?page=");
      out.print(currentPageNumer + 1);
      out.write("'> &raquo\r\n");
      out.write("			</a>\r\n");
      out.write("		\r\n");
      out.write("			<a href='");
      out.print(functionPrefix);
      out.write("?page=");
      out.print(totalPageNumber);
      out.write("'>Cuối</a>\r\n");
      out.write("		\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</div>  \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("  \r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"footer-container\">\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Về chúng tôi</h3>\r\n");
      out.write("                <p>COSMETIC SHOP chuyên cung cấp các sản phẩm chăm sóc da uy tín và chất lượng.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Liên hệ</h3>\r\n");
      out.write("                <p>Email: 123@example.com</p>\r\n");
      out.write("                <p>Điện thoại: 0123-456-789</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Kết nối với chúng tôi</h3>\r\n");
      out.write("                <p>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fa-brands fa-facebook\"></i></a>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fa-brands fa-twitter\"></i></a>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fa-brands fa-instagram\"></i></a>\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script src=\"script.js\"></script>\r\n");
      out.write("   <!--  <script>\r\n");
      out.write("        function toggleSubcategory(element) {\r\n");
      out.write("            var subcategory = element.nextElementSibling;\r\n");
      out.write("            if (subcategory.style.display === \"none\" || subcategory.style.display === \"\") {\r\n");
      out.write("                subcategory.style.display = \"block\";\r\n");
      out.write("                element.classList.remove(\"expand\");\r\n");
      out.write("                element.classList.add(\"collapse\");\r\n");
      out.write("            } else {\r\n");
      out.write("                subcategory.style.display = \"none\";\r\n");
      out.write("                element.classList.remove(\"collapse\");\r\n");
      out.write("                element.classList.add(\"expand\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script> -->\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <script>\r\n");
      out.write("    function addToCart(productGroupID, productID) {\r\n");
      out.write("        var xhr = new XMLHttpRequest();\r\n");
      out.write("        \r\n");
      out.write("        xhr.open(\"POST\", \"AddToCart\", true);\r\n");
      out.write("        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");  \r\n");
      out.write("	    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n");
      out.write("        xhr.onreadystatechange = function () {\r\n");
      out.write("        	if (xhr.responseText === 'not_logged_in') {\r\n");
      out.write("        		console.log('responseText:', xhr.responseText);\r\n");
      out.write("                alert('Bạn chưa đăng nhập!.');\r\n");
      out.write("                window.location.href = \"login.jsp\"; // Thực hiện chuyển hướng trang\r\n");
      out.write("            } else\r\n");
      out.write("            {console.log(\"readyState: \" + xhr.readyState + \", status: \" + xhr.status); // Kiểm tra trạng thái\r\n");
      out.write("            if (xhr.readyState === XMLHttpRequest.DONE) {\r\n");
      out.write("	            if (xhr.status === 200) {\r\n");
      out.write("	            	console.log('responseText:', xhr.responseText);\r\n");
      out.write("	                if (xhr.responseText === 'success') {\r\n");
      out.write("	                    alert('Sản phẩm đã được thêm vào giỏ hàng.');\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    alert('Có lỗi xảy ra. Vui lòng thử lại.');\r\n");
      out.write("	                }\r\n");
      out.write("	            } else {\r\n");
      out.write("	                alert('Có lỗi xảy ra. Vui lòng thử lại.');\r\n");
      out.write("	            }\r\n");
      out.write("	            }\r\n");
      out.write("	        }\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        xhr.send(\"proGroupID=\" + encodeURIComponent(productGroupID) + \"&proID=\" + encodeURIComponent(productID));\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function toggleSubcategory(element, categoryGroupID) {\r\n");
      out.write("    var subcategory = element.nextElementSibling;\r\n");
      out.write("    console.log(\"Toggling subcategory for group:\", categoryGroupID);\r\n");
      out.write("\r\n");
      out.write("    if (subcategory.style.display === \"none\" || subcategory.style.display === \"\") {\r\n");
      out.write("        if (!subcategory.hasChildNodes()) {\r\n");
      out.write("            fetchCategories(categoryGroupID, subcategory);\r\n");
      out.write("        } else {\r\n");
      out.write("            subcategory.style.display = \"block\";\r\n");
      out.write("        }\r\n");
      out.write("        element.classList.remove(\"expand\");\r\n");
      out.write("        element.classList.add(\"collapse\");\r\n");
      out.write("    } else {\r\n");
      out.write("        subcategory.style.display = \"none\";\r\n");
      out.write("        element.classList.remove(\"collapse\");\r\n");
      out.write("        element.classList.add(\"expand\");\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function fetchCategories(categoryGroupID, subcategoryElement) {\r\n");
      out.write("    console.log(\"Fetching categories for group:\", categoryGroupID);\r\n");
      out.write("    fetch('GetCategoriesByGroup?categoryGroupID=' + categoryGroupID)\r\n");
      out.write("        .then(response => {\r\n");
      out.write("            console.log(\"Fetch response status:\", response.status);\r\n");
      out.write("            if (!response.ok) {\r\n");
      out.write("                throw new Error('Network response was not ok ' + response.statusText);\r\n");
      out.write("            }\r\n");
      out.write("            return response.json();\r\n");
      out.write("        })\r\n");
      out.write("        .then(data => {\r\n");
      out.write("            console.log(\"Categories fetched:\", data);\r\n");
      out.write("            if (data.length === 0) {\r\n");
      out.write("                var div = document.createElement(\"div\");\r\n");
      out.write("                div.className = \"category-name-sub\";\r\n");
      out.write("                div.innerHTML = '<span>Không có danh mục nào</span>';\r\n");
      out.write("                subcategoryElement.appendChild(div);\r\n");
      out.write("            } else {\r\n");
      out.write("                data.forEach(category => {\r\n");
      out.write("                    var div = document.createElement(\"div\");\r\n");
      out.write("                    div.className = \"category-name-sub\";\r\n");
      out.write("                    div.innerHTML = '<a href=\"ShowProductByCat?catID=' + category.CategoryID.trim() + '\">' + category.CategoryName.trim() + '</a>';\r\n");
      out.write("\r\n");
      out.write("                    subcategoryElement.appendChild(div);\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("            subcategoryElement.style.display = \"block\";\r\n");
      out.write("        })\r\n");
      out.write("        .catch(error => console.error('Fetch error:', error));\r\n");
      out.write("}\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
